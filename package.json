{
	"title": "WooCommerce Phone Validator",
	"name": "woo-phone-validator",
	"textDomain": "woo-phone-validator",
	"mainFile": "wc-pv.php",
	"version": "1.2.0",
	"description": "Forces validation of WooCommerce billing phone field on checkout and billing address edit page",
	"license": "GPL-3.0",
	"repository": {
		"type": "git",
		"url": "https://github.com/Preciousomonze/woocommerce-phone-validator"
	},
	"bugs": {
		"url": "https://github.com/Preciousomonze/woocommerce-phone-validator/issues"
	},
	"author": "Preciousomonze",
	"dependencies": {
		"install": "^0.13.0",
		"npm": "^9.6.6",
		"string-replace-all": "^1.0.3",
		"uglify-js": "^3.10.0"
	},
	"devDependencies": {
		"clean-css-cli": "^4.3.0",
		"eslint": "^7.5.0",
		"node-wp-i18n": "^1.2.3",
		"uglify-es": "^3.3.9",
		"jsdoc": "~3.6.3",
		"wp-hookdoc": "^0.2.0"
	},
	"assets": {
		"js": {
			"min": "assets/js/*.min.js",
			"js": "assets/js/*.js"
		},
		"styles": {
			"min": "assets/css/*.min.css",
			"css": "assets/css/*.css"
		}
	},
	"scripts": {
		"lint:js": "lint-js.sh",
		"build": "npm run cleancss && npm run uglify && npm run lint:js && npm run makepot",
		"preuglify": "pre-uglify.sh",
		"uglify": "npm run preuglify && uglify.sh",
		"precss": "pre-cleancss.sh",
		"cleancss": "npm run precss && cleancss.sh",
		"makepot": "wpi18n addtextdomain woo-phone-validator; wpi18n makepot --domain-path languages --pot-file woo-phone-validator.pot --type plugin --main-file wc-pv.php --exclude node_modules,.wordpress-org,vendor",
		"compress-zip": "php wp-plugin-deploy-helper.php --plugin_name=woo-phone-validator --ignore_file_path=.git,.wordpress-org,.vscode/,node_modules,vendor,.sh --delete_files_in_zip=wp-plugin-deploy-helper.php,README.md,package-lock.json,composer.lock,phpcs.xml,.eslintrc.json,.distignore",
		"offload-zip": "php wp-plugin-deploy-helper.php --plugin_name=woo-phone-validator --offload=true",
		"compress-zip-offload": "npm run compress-zip && npm run offload-zip",
		"readme-assets:trunk": "npm run cleancss && npm run uglify && npm run lint:js && npm run compress-zip-offload",
		"deploy": "npm run build && npm run compress-zip && npm run offload-zip"
	}
}